
/* 
*  ##########################################
*       Amostra de imagem
*  ##########################################
*
*/

// variables
var accountUploadImg = $('#account-upload-img'),
accountUploadBtn = $('#account-upload');

// Update user photo on click of button
if (accountUploadBtn) {
  accountUploadBtn.on('change', function (e) {
  var reader = new FileReader(),
    files = e.target.files;
  reader.onload = function () {
    if (accountUploadImg) {
      accountUploadImg.attr('src', reader.result);
    }
  };
  reader.readAsDataURL(files[0]);
  });
}


  /* 
  *  ##########################################
  *       Alert Delete
  *  ##########################################
  *
  * linkController = Url para controller para deletar item
  * array = Caso tenha que enviar Array
  * dom = Id do item a ser excluido
  * t = Mensagem de alerta personalizada
  * errorExec = Mensagem personalizada de erro geral
  * e = Mensagem personalizada de erro geral
  *
  */
  function confirmDelete(post_url = 'null', dom = 'null', array = [], t = 'null', e = 'null') {
  
    // Verifica mensagem de erro
    if (e == 'null') { e = "Ocorreu um erro!! Se continuar, envie uma mensagem para o suporte com o código: X-H-D-000716."; }
    if (t == 'null') { t = ""; }

    // Se precisar de força um recarregar a página
    let r = $("#mark-"+dom).attr("reload");
    if (r == null) { r = false; }

    //Verifica se existe link de controlle
    if (post_url == 'null') { alertMensage('Ocorreu um erro URL:', e, 'e'); return; }
  
    // Executa poupap de confirmação de exclusão
    Swal.fire({
      title: 'Tem certeza que deseja excluir?',
      text: t,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#007277',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Sim, PODE EXCLUIR!',
      cancelButtonText: 'Cancelar'
    }).then((result) => {
  
      if (result.isConfirmed) {
  
        // Ajax para excluir item            
        $.ajax({
          headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
          dataType:'JSON',
          url: post_url,
          type: 'post',
          data: { _method: "delete", array: array },
          beforeSend: function () {
            //Spiner
            $('#spiner-' + dom).removeClass('d-none');
          },
          success: function(response){

            if(response.success){
              $('#' + dom).remove();
              Swal.fire('Sucesso!', response.message, 'success');
            }
            else
            {
              Swal.fire({ icon: 'warning', title: 'Oops...', text: response.message });
            }

            // Se precisar recarregar a página
            if(r){
              setTimeout(function() {
                document.location.reload(true);
              }, 1500);
            }

            //Retira o spiner
            $('#spiner-' + dom).addClass('d-none');

            return;
          }
        }).fail(function (jqXHR, textStatus, message) {
            Swal.fire({ icon: 'error', title: 'Oops...', text: message.message });
            return;
          });
      }
    })
  }


/**
  *  ##########################################
  *       saveForm - com confirmação
  *  ##########################################
  *
  * Formulario automático para atualização de input
  * 
  * t = Título do alert de confirmação
  * tx = conteúdo do alert de confirmação
  * b = texto do botão do alert de confirmação
  * r = True / false -> para recarregar a mesma página
  * redir = Se tiver preenchido, para redirecionar à uma URL específica
  */  
$(".formConfirmSave").submit(function(event){

	event.preventDefault();
  
  //Verifica valores passados no form
  // Ex:  ....  dom=1 erro="Descrição da mensagem de erro" ...
	let t = $(this).attr("alert-title");
	let tx = $(this).attr("alert-text");
	let b = $(this).attr("alert-button");
	let r = $(this).attr("reload");
  let redir = $(this).attr("redir");
 
  //Setar valores padrão
  let e = "Ocorreu um erro!! Se continuar, envie uma mensagem para o suporte com o código: X-H-D-000304.";
  if (t == null) { t = 'Tem certeza que deseja salvar os dados?'; }
  if (tx == null) { tx = ''; }
  if (b == null) { b = 'Sim, PODE SALVAR!'; }

  // Verificação de erro
	let dom = $(this).attr("dom");
	
  //Verificar se veio URL
  let post_url = $(this).attr("action");
  if(post_url == null){ alertMensage('Ocorreu um erro: URL',e,'e'); return; }

  //Pega inputs
  let form = new FormData(this);

  Swal.fire({
    title: t,
    text: tx,
    icon: 'question',
    showCancelButton: true,
    confirmButtonColor: '#007277',
    cancelButtonColor: '#d33',
    confirmButtonText: b,
    cancelButtonText: 'Cancelar'
    }).then((result) => {

      if (result.isConfirmed) {

        // Ajax para excluir item            
        $.ajax({
            headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
            url: post_url,
            type: 'post',
            data: form,
            dataType:'JSON',
            cache:false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                //Spiner
                $('#spiner-' + dom).removeClass('d-none');
            },
            success: function(response){

                if(response.success){
                  Swal.fire('Sucesso!', response.message, 'success');

                  // Se precisar recarregar a página
                  if(r){
                    setTimeout(function() {
                      document.location.reload(true);
                    }, 1500);
                  }

                  if(redir != null){
                    setTimeout(function() {
                        window.location.href = redir;
                    }, 1500);
                  }
                }
                else
                {
                  let l = response.message.length;
                  let mens="";
                  for (let i = 0; i < l; i++) {
                    mens += response.message[i] + " ";
                  }
                  Swal.fire({ icon: 'warning', title: 'Oops...', text: mens });
                }

                //Retira o spiner
                $('#spiner-' + dom).addClass('d-none');

                return;
            }
        }).fail(function (jqXHR, textStatus, message) {
            Swal.fire({ icon: 'error', title: 'Oops...', text: message.message });
            return;
        });
      }

    })
});

/**
  *  ##########################################
  *       saveFormSimple - SEM confirmação
  *  ##########################################
  *
  * Formulario automático para atualização de input
  * 
  * t = Título do alert de confirmação
  * tx = conteúdo do alert de confirmação
  * b = texto do botão do alert de confirmação
  * r = True / false -> para recarregar a mesma página
  * redir = Se tiver preenchido, para redirecionar à uma URL específica
  * modal = True->grand no meio / false->pequeno canto direito (default)
  * 
  */  
 $(".formSave").submit(function(event){

	event.preventDefault();
  
  //Verifica valores passados no form
  // Ex:  ....  dom=1 erro="Descrição da mensagem de erro" ...
	let t = $(this).attr("alert-title");
	let tx = $(this).attr("alert-text");
	let b = $(this).attr("alert-button");
	let r = $(this).attr("reload");
  let redir = $(this).attr("redir");
  let modal = $(this).attr("modal");

  //Setar valores padrão
  let e = "Ocorreu um erro!! Se continuar, envie uma mensagem para o suporte com o código: X-H-D-000304.";
  if (t == null) { t = 'Tem certeza que deseja salvar os dados?'; }
  if (tx == null) { tx = ''; }
  if (b == null) { b = 'Sim, PODE SALVAR!'; }
  if (modal == null) { modal = false; }

  // Verificação de erro
	let dom = $(this).attr("dom");
	
  //Verificar se veio URL
  let post_url = $(this).attr("action");
  if(post_url == null){ alertMensage('Ocorreu um erro: URL',e,'e'); return; }

  //Pega inputs
  let form = new FormData(this);

  // Ajax para excluir item            
  $.ajax({
      headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
      url: post_url,
      type: 'post',
      data: form,
      dataType:'JSON',
      cache:false,
      contentType: false,
      processData: false,
      beforeSend: function () {
          //Spiner
          $('#spiner-' + dom).removeClass('d-none');
          $('button').attr('disabled','true');
      },
      success: function(response){

          if(response.success){

            if(modal){
              Swal.fire('Sucesso!', response.message, 'success');
            }else{
              toastr.success(response.message, 'Sucesso!', { closeButton: true, progressBar: true, });
            }

            // Se precisar recarregar a página
            if(r){
              setTimeout(function() { document.location.reload(true); }, 1500);
            }

            // Se precisar redirecionar a página
            if(redir != null){
              setTimeout(function() { window.location.href = redir; }, 1500);
            }
          }
          else
          {
            let l = response.message.length;
            let mens="";

            for (let i = 0; i < l; i++) { mens += response.message[i] + " "; }

            if(modal){
              Swal.fire({ icon: 'warning', title: 'Oops...', text: mens });
            }else{
              toastr.error(mens, 'Ocorreu um erro!', { closeButton: true, progressBar: true, });
            }            
          }

          //Retira o spiner
          $('#spiner-' + dom).addClass('d-none');

          setTimeout(function() { $('button').removeAttr('disabled'); }, 2000);
          
          return;
      }
  }).fail(function (jqXHR, textStatus, message) {

    $('button').removeAttr('disabled');
    
    Swal.fire({ icon: 'error', title: 'Oops...', text: message.message });
    return;

  });
      
});


/**
  *  ##########################################
  *       saveForm - com confirmação
  *  ##########################################
  *
  * Formulario automático para atualização de input
  * 
  * t = Título do alert de confirmação
  * tx = conteúdo do alert de confirmação
  * b = texto do botão do alert de confirmação
  * r = True / false -> para recarregar a mesma página
  * redir = Se tiver preenchido, para redirecionar à uma URL específica
  */  
 $(".formConfirmCkEd").submit(function(event){

	event.preventDefault();
  
  //Verifica valores passados no form
  // Ex:  ....  dom=1 erro="Descrição da mensagem de erro" ...
	let r = $(this).attr("reload");
  let redir = $(this).attr("redir");

  let ckEd = CKEDITOR.instances.txtcontent.getData();
  
  //Setar valores padrão
  let e = "Ocorreu um erro!! Se continuar, envie uma mensagem para o suporte com o código: X-H-D-000304.";
  t = 'Tem certeza que deseja salvar os dados?'; 
  tx = '';
  b = 'Sim, PODE SALVAR!';

  // Verificação de erro
	let dom = $(this).attr("dom");
	
  //Verificar se veio URL
  let post_url = $(this).attr("action");
  if(post_url == null){ alertMensage('Ocorreu um erro: URL',e,'e'); return; }

  //Pega inputs
  /* let form = new FormData(this); */
  let form_data = $(this).serialize();

  let abcd = {form_data,ckEd}

  Swal.fire({
    title: t,
    text: tx,
    icon: 'question',
    showCancelButton: true,
    confirmButtonColor: '#007277',
    cancelButtonColor: '#d33',
    confirmButtonText: b,
    cancelButtonText: 'Cancelar'
    }).then((result) => {

      if (result.isConfirmed) {

        // Ajax para excluir item            
        $.ajax({
            headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') },
            url: post_url,
            type: 'post',
            data: abcd,
            dataType:'JSON',
            beforeSend: function () {
                //Spiner
                $('#spiner-' + dom).removeClass('d-none');
            },
            success: function(response){

                if(response.success){
                  Swal.fire('Sucesso!', response.message, 'success');

                  // Se precisar recarregar a página
                  if(r){
                    setTimeout(function() {
                      document.location.reload(true);
                    }, 1500);
                  }

                  if(redir != null){
                    setTimeout(function() {
                        window.location.href = redir;
                    }, 1500);
                  }
                }
                else
                {
                  let l = response.message.length;
                  let mens="";
                  for (let i = 0; i < l; i++) {
                    mens += response.message[i] + " ";
                  }
                  Swal.fire({ icon: 'warning', title: 'Oops...', text: mens });
                }

                //Retira o spiner
                $('#spiner-' + dom).addClass('d-none');

                return;
            }
        }).fail(function (jqXHR, textStatus, message) {
            Swal.fire({ icon: 'error', title: 'Oops...', text: message.message });
            return;
        });
      }

    })
});


  /* 
  *  ##########################################
  *       Alert Mensagem Default
  *  ##########################################
  *
  * h = Titulo
  * m = mensagem a ser exibida
  * i = tipo de ícone de mensagem || e -> erro , s -> success, i -> informação
  * t = tipo de mensagem || true = Mensagem Pequena no topo , false = Mensagem de Alerta grande no meio
  *
  */
  function alertMensage(h = 'null', m = 'null', i, t=false) {
  
    /* Icone */
    let icon;
    switch (i) {
      case 's': icon = 'success'; break;
      case 'e': icon = 'error'; break;
      case 'w': icon = 'warning'; break;
      case 'q': icon = 'question'; break;
      default: icon = 'info';
    }

    if(t){
        Swal.fire(h, m, icon);
        return;
    }
    else
    {
        toastr[icon](m, h, {
            closeButton: true,
            progressBar: true,
        });
    }
  }
 
  